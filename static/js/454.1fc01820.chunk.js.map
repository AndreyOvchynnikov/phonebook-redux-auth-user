{"version":3,"file":"static/js/454.1fc01820.chunk.js","mappings":"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","sources":["webpack://phonebook-redux-auth-user/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://phonebook-redux-auth-user/./src/components/Title/Title.module.css?a947","components/Title/Title.jsx","redux/contacts/selectors.js","webpack://phonebook-redux-auth-user/./src/components/NewContactForm/NewContactForm.module.css?69b9","components/NewContactForm/NewContactForm.js","webpack://phonebook-redux-auth-user/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://phonebook-redux-auth-user/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import css from './Section.module.css';\n\n\nconst Section = ({ children }) => (\n  <section className={css.section}>{children}</section>\n);\n\nexport default Section;","// extracted by mini-css-extract-plugin\nexport default {\"conteiner\":\"Title_conteiner__QnTnj\",\"title\":\"Title_title__mrNq5\",\"appear\":\"Title_appear__SOQhR\",\"appearActive\":\"Title_appearActive__a1Zr4\"};","import React, { createRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport css from './Title.module.css';\n\nconst Title = ({children}) => {\n  const itemRef = createRef(null);\n\n  return (\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames={css}\n      nodeRef={itemRef}\n    >\n      <div className={css.conteiner}>\n        <h1 className={css.title} ref={itemRef}>\n          {children}\n        </h1>\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport default Title;","export const selectLoading = state => state.contacts.loading;\n\n// export const selectFilter = state => state.tasks.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewContactForm_form__Gp63X\",\"label\":\"NewContactForm_label__SdKKy\",\"input\":\"NewContactForm_input__lDMM7\",\"button\":\"NewContactForm_button__A6FZp\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './NewContactForm.module.css';\nimport Section from 'components/Section';\n\nconst NewContactForm = () => {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectAllContacts);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const form = event.currentTarget\n        const { name, number } = form.elements\n        const newContact = {\n            name: name.value ,\n            number: number.value,\n        }\n        \n        if (contacts.find(contact => contact.name === name.value)) {\n        alert(`${name.value} is already in contacts`)\n        return\n        }\n\n        dispatch(addContact(newContact))\n        form.reset();\n    }\n\n    return (\n        <Section>\n            <form className={css.form} onSubmit={handleSubmit}>\n                <label htmlFor=\"name\" className={css.label}>Name:\n                    <input\n                        className={css.input}    \n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Contact name\"\n                        required\n                        autoComplete=\"off\"\n                    />\n                </label>\n                <label htmlFor=\"number\" className={css.label}>Number:\n                    <input\n                        className={css.input}        \n                        type=\"tel\"\n                        name=\"number\"\n                        placeholder=\"Phone number\"\n                        required\n                        autoComplete=\"off\"\n                    />\n                </label>\n                <button className={css.button} type=\"submit\">Add contact</button>\n            </form>\n        </Section>\n            \n        )\n    \n}\n\nexport default NewContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import s from './Filter.module.css'\n\nconst Filter = ({filterValue, onChange}) => {\n    return (\n        <label htmlFor=\"filter\" className={s.label}>Find contacts by name:\n            <input\n                value={filterValue}\n                className={s.input}\n                onChange={onChange}  \n                placeholder=\"Find contact\"\n                type=\"text\"\n                name=\"filter\"\n                autoComplete=\"off\"\n                />\n            </label>\n    )\n}\n\nexport default Filter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\",\"listItem\":\"ContactsList_listItem__KzRCz\",\"name\":\"ContactsList_name__cbzy1\",\"number\":\"ContactsList_number__9xIVj\",\"button\":\"ContactsList_button__EDc5e\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectAllContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport s from './ContactsList.module.css'\n\n\nconst ContactsList = ({filterValue}) => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectAllContacts);\n\n    const filteredConcacts = contacts.filter(contact => contact.name.toLowerCase().includes(filterValue.toLowerCase()))\n\n\n    const handleClick = (event) => {\n        const removeId = event.target.id;\n        dispatch(deleteContact(removeId));\n    }\n\n    return (\n\n        <ul className={s.list}>\n            {filteredConcacts.map(contact => {\n                const { name, number, id } = contact;\n               return (<li key={id} className={s.listItem}>\n                   <p className={s.name}>{name}</p>\n                   <span className={s.number}>{number}</span>\n                   <button className={s.button} id={id} onClick={handleClick} type=\"button\">Delete</button>\n                </li>)\n                \n            }\n         \n            )}\n        </ul>\n    )\n}\n\nexport default ContactsList;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NewContactForm from 'components/NewContactForm';\nimport Filter from '../components/Filter';\nimport ContactsList from 'components/ContactsList';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectLoading } from '../redux/contacts/selectors'\nimport Section from 'components/Section';\nimport Title from 'components/Title';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleChange = (event) => {\n    setFilter(event.currentTarget.value);\n  }\n\n  return (\n    <Section>\n        <Title>Contacts</Title>\n        <NewContactForm />\n        <Filter filterValue={filter} onChange={handleChange} />\n        <div>{isLoading && 'Request in progress...'}</div>\n        <ContactsList filterValue={filter} />\n      </Section>\n  );\n}\n"],"names":["children","className","css","itemRef","createRef","CSSTransition","in","appear","timeout","classNames","nodeRef","ref","selectLoading","state","contacts","loading","selectAllContacts","items","dispatch","useDispatch","useSelector","Section","onSubmit","event","preventDefault","form","currentTarget","elements","name","number","newContact","value","find","contact","alert","addContact","reset","htmlFor","type","placeholder","required","autoComplete","filterValue","onChange","s","filteredConcacts","filter","toLowerCase","includes","handleClick","removeId","target","id","deleteContact","map","onClick","Contacts","isLoading","useState","setFilter","useEffect","fetchContacts","Title"],"sourceRoot":""}